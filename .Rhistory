cbhmis <- readxl::read_xlsx("C:/Users/anumi/OneDrive - Bill & Melinda Gates Foundation/HDS - Health and Data Systems/CBHMIS CHAI Nigeria/Source data/Kaduna_Final Data for Analysis.xlsx",sheet="Merged Data")
library(sf)
library(spdep)
library(mapview)
outdir <- "C:/Users/anumi/OneDrive - Bill & Melinda Gates Foundation/Documents/GitHub/CBHMIS_SAE_MMR/"
cbhmis <- readxl::read_xlsx("C:/Users/anumi/OneDrive - Bill & Melinda Gates Foundation/HDS - Health and Data Systems/CBHMIS CHAI Nigeria/Source data/Kaduna_Final Data for Analysis.xlsx",sheet="Merged Data")
View(cbhmis)
table(cbhmis)
table(cbhmis$start)
View(cbhmis)
names(cbhmis)
gsub(pattern = " ",replacement = ".",x=names(cbhmis))
names(cbhmis) <- gsub(pattern = " ",replacement = ".",x=names(cbhmis))
paste0(cbhmis$Month.of.reporting, cbhmis$Year.of.reporting)
cbhmis$time <- format(as.Date(paste0(cbhmis$Month.of.reporting, cbhmis$Year.of.reporting,"1"), format="%B%Y%d"), "%m-%Y")
View(cbhmis)
table(cbhmis$time)
table(cbhmis$time,exclude = NULL)
cbhmis <- cbhmis[cbhmis$time >= "10-2023" & cbhmis$time<="03-2025",]
cbhmis$time
library(sf)
library(spdep)
library(mapview)
outdir <- "C:/Users/anumi/OneDrive - Bill & Melinda Gates Foundation/Documents/GitHub/CBHMIS_SAE_MMR/"
cbhmis <- readxl::read_xlsx("C:/Users/anumi/OneDrive - Bill & Melinda Gates Foundation/HDS - Health and Data Systems/CBHMIS CHAI Nigeria/Source data/Kaduna_Final Data for Analysis.xlsx",sheet="Merged Data")
names(cbhmis) <- gsub(pattern = " ",replacement = ".",x=names(cbhmis))
cbhmis$time <- format(as.Date(paste0(cbhmis$Month.of.reporting, cbhmis$Year.of.reporting,"1"), format="%B%Y%d"), "%m-%Y")
warnings()
View(cbhmis)
cbhmis$time
cbhmis$time >= "10-2023"
cbhmis$time >= "10-2023" & cbhmis$time<="03-2025"
cbhmis$time<="03-2025"
cbhmis$time >= as.Date("10-2023") & cbhmis$time<=as.Date("03-2025")
cbhmis <- cbhmis[cbhmis$time >= as.Date("10-2023"),]
cbhmis$time >= as.Date("10-2023"),
cbhmis$time <- as.Date(paste0(cbhmis$Month.of.reporting, cbhmis$Year.of.reporting,"1"), format="%B%Y%d")
table(cbhmis$time,exclude = NULL)
cbhmis <- cbhmis[cbhmis$time >= as.Date("2023-10-01") & cbhmis$time < as.Date("2025-04-01"),]
View(cbhmis)
table(cbhmis$time)
cbhmis$Number.of.CVs.that.reported
View(cbhmis)
cbhmis$Number.of.CVs.that.reported/cbhmis$Total.number.of.CVs.in.the.ward
cbhmis$repRate <- cbhmis$Number.of.CVs.that.reported/cbhmis$Total.number.of.CVs.in.the.ward
cbhmis$repRate
library(tidyverse)
library(ggplot2)
cbhmis$LGA
p1 <- ggplot(chbmis,aes(x=time,y=repRate)) + facet_wrap(~LGA) + geom_point() + geom_line()
p1 <- ggplot(cbhmis,aes(x=time,y=repRate)) + facet_wrap(~LGA) + geom_point() + geom_line()
p1
p1 <- ggplot(cbhmis,aes(x=time,y=repRate,group="Ward")) + facet_wrap(~LGA) + geom_point() + geom_line()
p1
table(cbhmis$time)
table(cbhmis$time,exclude = NULL)
table(cbhmis$repRate,exclude = NULL)
table(cbhmis$repRate)
table(cbhmis$repRate,exclude = NULL)
View(cbhmis[is.nan(cbhmis$repRate),])
table(cbhmis$LGA)
table(cbhmis$LGA,exclude = NULL)
rm(list=ls())
outdir <- "C:/Users/anumi/OneDrive - Bill & Melinda Gates Foundation/Documents/GitHub/CBHMIS_SAE_MMR/"
cbhmis <- readxl::read_xlsx("C:/Users/anumi/OneDrive - Bill & Melinda Gates Foundation/HDS - Health and Data Systems/CBHMIS CHAI Nigeria/Source data/Kaduna_Final Data for Analysis.xlsx",sheet="Merged Data")
names(cbhmis) <- gsub(pattern = " ",replacement = ".",x=names(cbhmis))
table(cbhmis$LGA,exclude = NULL)
cbhmis$LGA
#light data cleaning
cbhmis <- cbhmis[cbhmis$LGA!="0",]
cbhmis$time <- as.Date(paste0(cbhmis$Month.of.reporting, cbhmis$Year.of.reporting,"1"), format="%B%Y%d")
cbhmis <- cbhmis[cbhmis$time >= as.Date("2023-10-01") & cbhmis$time < as.Date("2025-04-01"),]
#### A: Spatial data for adjacency matrix in model ####
#Nigeria shape file from GADM
nga_shp <- st_read("C:/Users/anumi/OneDrive - Bill & Melinda Gates Foundation/Data/shape_files/NGA/nga_admbnda_adm2_osgof/nga_admbnda_adm2_osgof_20170222.shp")
kdn_shp <- nga_shp[nga_shp$admin1Name=="Kaduna",]
st_crs(kdn_shp) ## checking projection of shape file to match GPS coordinates
mapview(kdn_shp) ## view map of Kaduna
# create adjacency matrix  -- Don't actually need the matrix for stan but just the nb file
nb <- poly2nb(kdn_shp)
adj_matrix <- nb2mat(nb, style = "B", zero.policy = TRUE)
id_col <- kdn_shp$admin2Name
rownames(adj_matrix) <- id_col
colnames(adj_matrix) <- id_col
write.csv(adj_matrix,paste0(outdir,"/adj_mat.csv"))
cbhmis$repRate <- cbhmis$Number.of.CVs.that.reported/cbhmis$Total.number.of.CVs.in.the.ward
table(cbhmis$repRate,exclude = NULL)
View(cbhmis[is.nan(cbhmis$repRate),])
p1 <- ggplot(cbhmis,aes(x=time,y=repRate,group="Ward")) + facet_wrap(~LGA) + geom_point() + geom_line()
p1
cbhmis$Ward
p1 <- ggplot(cbhmis,aes(x=time,y=repRate,group=Ward)) + facet_wrap(~LGA) + geom_point() + geom_line()
p1
p1 <- ggplot(cbhmis,aes(x=time,y=repRate,group=Ward)) + facet_wrap(~LGA) + geom_point() + geom_line() + theme_bw()
p1 <- ggplot(cbhmis,aes(x=time,y=repRate,group=Ward,color=Ward)) + facet_wrap(~LGA) + geom_point() + geom_line() + theme_bw()
p1
p1 <- ggplot(cbhmis,aes(x=time,y=repRate,group=Ward,color=Ward)) + facet_wrap(~LGA) +
geom_point() + geom_line() + theme_bw() +   theme(legend.position = "none")
p1
ward_counts <- aggregate(Ward ~ LGA, data = cbhmis, FUN = function(x) length(unique(x)))
ward_counts
View(ward_counts)
cbhmis <- cbhmis %>% group_by(LGA) %>%
mutate(Ward_color_group = as.factor((as.numeric(factor(Ward)) - 1) %% 10 + 1))
p1 <- ggplot(cbhmis,aes(x=time,y=repRate,group=Ward,color=Ward_color_group)) + facet_wrap(~LGA) +
geom_point() + geom_line() + theme_bw() +   theme(legend.position = "none")
p1
unique(cbhmis$LGA)
sort(unique(cbhmis$LGA))
cbhmis$LGA <- ifelse(cbhmis$LGA=="Birnin_gwari","Birnin_Gwari",cbhmis$LGA)
cbhmis$LGA <- ifelse(cbhmis$LGA=="Jema'a","Jemaa",cbhmis$LGA)
cbhmis <- cbhmis[cbhmis$LGA!="0",]
cbhmis$LGA <- ifelse(cbhmis$LGA=="Birnin_gwari","Birnin_Gwari",cbhmis$LGA)
cbhmis$LGA <- ifelse(cbhmis$LGA=="Jema'a","Jemaa",cbhmis$LGA)
cbhmis$LGA <- ifelse(cbhmis$LGA=="Kaduna_north","Kaduna_North",cbhmis$LGA)
cbhmis$LGA <- ifelse(cbhmis$LGA=="Kaduna_south","Kaduna_South",cbhmis$LGA)
cbhmis$LGA <- ifelse(cbhmis$LGA=="Sabon_gari","Sabon_Gari",cbhmis$LGA)
cbhmis$LGA <- ifelse(cbhmis$LGA=="Zangon_kataf","Zangon_Kataf",cbhmis$LGA)
rm(list=ls())
outdir <- "C:/Users/anumi/OneDrive - Bill & Melinda Gates Foundation/Documents/GitHub/CBHMIS_SAE_MMR/"
cbhmis <- readxl::read_xlsx("C:/Users/anumi/OneDrive - Bill & Melinda Gates Foundation/HDS - Health and Data Systems/CBHMIS CHAI Nigeria/Source data/Kaduna_Final Data for Analysis.xlsx",sheet="Merged Data")
names(cbhmis) <- gsub(pattern = " ",replacement = ".",x=names(cbhmis))
#light data cleaning
cbhmis <- cbhmis[cbhmis$LGA!="0",]
cbhmis$LGA <- ifelse(cbhmis$LGA=="Birnin_gwari","Birnin_Gwari",cbhmis$LGA)
cbhmis$LGA <- ifelse(cbhmis$LGA=="Jema'a","Jemaa",cbhmis$LGA)
cbhmis$LGA <- ifelse(cbhmis$LGA=="Kaduna_north","Kaduna_North",cbhmis$LGA)
cbhmis$LGA <- ifelse(cbhmis$LGA=="Kaduna_south","Kaduna_South",cbhmis$LGA)
cbhmis$LGA <- ifelse(cbhmis$LGA=="Sabon_gari","Sabon_Gari",cbhmis$LGA)
cbhmis$LGA <- ifelse(cbhmis$LGA=="Zangon_kataf","Zangon_Kataf",cbhmis$LGA)
#subsetting to inclusion period
cbhmis$time <- as.Date(paste0(cbhmis$Month.of.reporting, cbhmis$Year.of.reporting,"1"), format="%B%Y%d")
cbhmis <- cbhmis[cbhmis$time >= as.Date("2023-10-01") & cbhmis$time < as.Date("2025-04-01"),]
#Nigeria shape file from GADM
nga_shp <- st_read("C:/Users/anumi/OneDrive - Bill & Melinda Gates Foundation/Data/shape_files/NGA/nga_admbnda_adm2_osgof/nga_admbnda_adm2_osgof_20170222.shp")
kdn_shp <- nga_shp[nga_shp$admin1Name=="Kaduna",]
st_crs(kdn_shp) ## checking projection of shape file to match GPS coordinates
mapview(kdn_shp) ## view map of Kaduna
# create adjacency matrix  -- Don't actually need the matrix for stan but just the nb file
nb <- poly2nb(kdn_shp)
adj_matrix <- nb2mat(nb, style = "B", zero.policy = TRUE)
id_col <- kdn_shp$admin2Name
rownames(adj_matrix) <- id_col
colnames(adj_matrix) <- id_col
write.csv(adj_matrix,paste0(outdir,"/adj_mat.csv"))
#### B: Analysis of Under-reporting
## Ward-level reporting rates over time
cbhmis$repRate <- cbhmis$Number.of.CVs.that.reported/cbhmis$Total.number.of.CVs.in.the.ward
table(cbhmis$repRate,exclude = NULL)
#number of wards per LGA
ward_counts <- aggregate(Ward ~ LGA, data = cbhmis, FUN = function(x) length(unique(x)))
cbhmis <- cbhmis %>% group_by(LGA) %>%
mutate(Ward_color_group = as.factor((as.numeric(factor(Ward)) - 1) %% 10 + 1))
p1 <- ggplot(cbhmis,aes(x=time,y=repRate,group=Ward,color=Ward_color_group)) + facet_wrap(~LGA) +
geom_point() + geom_line() + theme_bw() +   theme(legend.position = "none")
p1
table(cbhmis$time,cbhmis$Ward)
ward_month_counts <- aggregate(~ Ward + time, data = cbhmis, FUN = function(x) length(unique(x)))
ward_time_counts <- aggregate(repRate ~ Ward + time, data = cbhmis, FUN = length)
View(ward_time_counts)
hist(ward_time_counts$repRate)
View(ward_time_counts)
ward_time_counts[ward_time_counts>1,]
ward_time_counts <- aggregate(repRate ~ LGA  + Ward + time, data = cbhmis, FUN = length)  ## number of duplicate ward/month
ward_time_counts[ward_time_counts>1,]
ward_counts <- aggregate(Ward ~ LGA, data = cbhmis, FUN = function(x) length(unique(x)))
ward_time_counts <- aggregate(repRate ~ LGA  + Ward + time, data = cbhmis, FUN = length)  ## number of duplicate ward/month
View(ward_time_counts)
names(ward_time_counts)
names(ward_time_counts)[4] <- "count"
ward_time_counts[ward_time_counts$count>1,]
write.csv(paste0(outdir,"datac checking/duplicates.csv"))
write.csv(ward_time_counts,paste0(outdir,"datac checking/duplicates.csv"))
paste0(outdir,"datac checking/duplicates.csv")
write.csv(ward_time_counts,paste0(outdir,"data checking/duplicates.csv"))
outdir
outdir <- "C:/Users/anumi/OneDrive - Bill & Melinda Gates Foundation/Documents/GitHub/CBHMIS_SAE_MMR/output"
write.csv(ward_time_counts,paste0(outdir,"data checks/duplicates.csv"))
paste0(outdir,"data checks/duplicates.csv"
)
outdir <- "C:/Users/anumi/OneDrive - Bill & Melinda Gates Foundation/Documents/GitHub/CBHMIS_SAE_MMR/output/"
write.csv(ward_time_counts,paste0(outdir,"data checks/duplicates.csv"))
write.csv(ward_time_counts[ward_time_counts$count>1,],paste0(outdir,"data checks/duplicates.csv"))
library(sf)
library(spdep)
library(mapview)
library(tidyverse)
library(ggplot2)
rm(list=ls())
outdir <- "C:/Users/anumi/OneDrive - Bill & Melinda Gates Foundation/Documents/GitHub/CBHMIS_SAE_MMR/output/"
cbhmis <- readxl::read_xlsx("C:/Users/anumi/OneDrive - Bill & Melinda Gates Foundation/HDS - Health and Data Systems/CBHMIS CHAI Nigeria/Source data/Kaduna_Final Data for Analysis.xlsx",sheet="Merged Data")
names(cbhmis) <- gsub(pattern = " ",replacement = ".",x=names(cbhmis))
#light data cleaning
cbhmis <- cbhmis[cbhmis$LGA!="0",]
cbhmis$LGA <- ifelse(cbhmis$LGA=="Birnin_gwari","Birnin_Gwari",cbhmis$LGA)
cbhmis$LGA <- ifelse(cbhmis$LGA=="Jema'a","Jemaa",cbhmis$LGA)
cbhmis$LGA <- ifelse(cbhmis$LGA=="Kaduna_north","Kaduna_North",cbhmis$LGA)
cbhmis$LGA <- ifelse(cbhmis$LGA=="Kaduna_south","Kaduna_South",cbhmis$LGA)
cbhmis$LGA <- ifelse(cbhmis$LGA=="Sabon_gari","Sabon_Gari",cbhmis$LGA)
cbhmis$LGA <- ifelse(cbhmis$LGA=="Zangon_kataf","Zangon_Kataf",cbhmis$LGA)
#subsetting to inclusion period
cbhmis$time <- as.Date(paste0(cbhmis$Month.of.reporting, cbhmis$Year.of.reporting,"1"), format="%B%Y%d")
cbhmis <- cbhmis[cbhmis$time >= as.Date("2023-10-01") & cbhmis$time < as.Date("2025-04-01"),]
nga_shp <- st_read("C:/Users/anumi/OneDrive - Bill & Melinda Gates Foundation/Data/shape_files/NGA/nga_admbnda_adm2_osgof/nga_admbnda_adm2_osgof_20170222.shp")
kdn_shp <- nga_shp[nga_shp$admin1Name=="Kaduna",]
# create adjacency matrix  -- Don't actually need the matrix for stan but just the nb file
nb <- poly2nb(kdn_shp)
adj_matrix <- nb2mat(nb, style = "B", zero.policy = TRUE)
id_col <- kdn_shp$admin2Name
rownames(adj_matrix) <- id_col
colnames(adj_matrix) <- id_col
write.csv(adj_matrix,paste0(outdir,"/adj_mat.csv"))
cbhmis$repRate <- cbhmis$Number.of.CVs.that.reported/cbhmis$Total.number.of.CVs.in.the.ward
table(cbhmis$repRate,exclude = NULL)
cbhmis
names(cbhmis)
