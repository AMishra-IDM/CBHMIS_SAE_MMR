library(mapview)
library(tidyverse)
library(ggplot2)
library(patchwork)
library(terra)
library(lubridate)
library(exactextractr)
library(Polychrome)
set.seed(105)
setwd("C:/Users/anumi/OneDrive - Bill & Melinda Gates Foundation/Documents/GitHub/CBHMIS_SAE_MMR")
cbhmis <- readxl::read_xlsx("raw data/Kaduna_Final Data for Analysis_corrected.xlsx",sheet="Merged Data")
names(cbhmis) <- gsub(pattern = " ",replacement = ".",x=names(cbhmis))
#light data cleaning
cbhmis <- cbhmis[cbhmis$LGA!="0",]
cbhmis$LGA <- ifelse(cbhmis$LGA=="Birnin_gwari","Birnin_Gwari",cbhmis$LGA)
cbhmis$LGA <- ifelse(cbhmis$LGA=="Jema'a","Jemaa",cbhmis$LGA)
cbhmis$LGA <- ifelse(cbhmis$LGA=="Kaduna_north","Kaduna_North",cbhmis$LGA)
cbhmis$LGA <- ifelse(cbhmis$LGA=="Kaduna_south","Kaduna_South",cbhmis$LGA)
cbhmis$LGA <- ifelse(cbhmis$LGA=="Sabon_gari","Sabon_Gari",cbhmis$LGA)
cbhmis$LGA <- ifelse(cbhmis$LGA=="Zangon_kataf","Zangon_Kataf",cbhmis$LGA)
#subsetting to inclusion period
cbhmis$time <- as.Date(paste0(cbhmis$Month.of.reporting, cbhmis$Year.of.reporting,"1"), format="%B%Y%d")
cbhmis <- cbhmis[cbhmis$time >= as.Date("2023-10-01") & cbhmis$time < as.Date("2025-04-01"),]
cbhmis$submission_time <- cbhmis$`_submission_time`
#subsetting to a smaller set of variable
cbhmis <- cbhmis %>% dplyr::select("LGA","Ward","time","Total.number.of.CVs.in.the.ward","Number.of.CVs.that.reported",
"No.of.ANC.referral.in.the.last.one.month","No.of.FP.referral.in.the.last.one.month",
"No.of.Labour.&.delivery.referrals.in.the.last.one.month","No.of.PNC.referral.in.the.last.one.month",
"No.of.PPFP.referral.in.the.last.one.month","No.of.immunization.referral","No.of.Nutrition.referral",
"No.of.Integrated.Management.of.Childhood.Illness.(IMCI).referral",
"Total.number.of.live.births","Number.of.live.births.-.Males","Number.of.live.births.-.Females",
"Number.of.maternal.deaths",
"submission_time")
cbhmis$id <- 1:nrow(cbhmis)
## checking number of missing obs for a variable
colSums(is.na(cbhmis))
#number of wards per LGA -- seems to be some duplicates
ward_counts <- aggregate(Ward ~ LGA, data = cbhmis, FUN = function(x) length(unique(x)))
ward_time_counts <- aggregate(id ~ LGA  + Ward + time, data = cbhmis, FUN = length)  ## number of duplicate ward/month
names(ward_time_counts)[4] <- "count"
ward_time_counts[ward_time_counts$count>1,]
write.csv(ward_time_counts[ward_time_counts$count>1,],paste0("data checks/duplicates.csv"))
#only keeping last submission
cbhmis_clean <-  cbhmis %>%
group_by(LGA, Ward, time)  %>%
slice_max(order_by = submission_time, n = 1, with_ties = FALSE) %>%
ungroup()
## checking number of missing obs for a variable
colSums(is.na(cbhmis_clean))
#check for duplicates again
ward_time_counts_clean <- aggregate(id ~ LGA  + Ward + time, data = cbhmis_clean, FUN = length)  ## number of duplicate ward/month
names(ward_time_counts_clean)[4] <- "count"
ward_counts_clean <- aggregate(id ~ LGA  + Ward , data = cbhmis_clean, FUN = length)  ## number of duplicate ward/month
names(ward_counts_clean)[3] <- "count"
hist(ward_counts_clean$count) ## shouldn't have more than 18 obs per ward given the months we've included
write.csv(ward_counts_clean,paste0("data checks/num_obs_per_ward.csv"),row.names = F)
# some manual cleaning -- total number of CVs and rep CVs clearly getting enetered in one cell here
cbhmis_clean$Total.number.of.CVs.in.the.ward <- ifelse(cbhmis_clean$Total.number.of.CVs.in.the.ward>1000,
as.numeric(substr(as.character(cbhmis_clean$Number.of.CVs.that.reported), 1, 2)),
cbhmis_clean$Total.number.of.CVs.in.the.ward)
# ASSUMPTION: If the number of CVs per ward is 3 digits, we're going to take the first two & one ward seems kind of off
cbhmis_clean$Total.number.of.CVs.in.the.ward <- ifelse(cbhmis_clean$Total.number.of.CVs.in.the.ward>100,
as.numeric(substr(as.character(cbhmis_clean$Number.of.CVs.that.reported), 1, 2)),
cbhmis_clean$Total.number.of.CVs.in.the.ward)
cbhmis_clean$Total.number.of.CVs.in.the.ward[cbhmis_clean$Ward=="Turawa" & cbhmis_clean$time=="2024-11-01"] <- 9
names(cbhmis_clean) <- c("LGA", "Ward","time","totalCVs","repCVs",
"ANC_ref","FP_ref","LD_ref","PNC_ref","PPFP_ref","Imm_ref","Nut_ref","ICMI_ref",
"lb","lb_male","lb_female",
"deaths","sub_time","id")
#### A: Spatial data for adjacency matrix in model ####
#Nigeria shape file from GADM
nga_shp <- st_read("raw data/gadm41_NGA_shp/gadm41_NGA_2.shp")
kdn_shp <- nga_shp[nga_shp$NAME_1=="Kaduna",]
kdn_shp$NAME_2 <- gsub(pattern = " ",replacement = "_", kdn_shp$NAME_2)
kdn_shp$NAME_2 <- gsub(pattern = "'",replacement = "", kdn_shp$NAME_2)
st_crs(kdn_shp) ## checking projection of shape file to match GPS coordinates
mapview(kdn_shp) ## view map of Kaduna
# create adjacency matrix  -- Don't actually need the matrix for stan but just the nb file
nb <- poly2nb(kdn_shp)
adj_matrix <- nb2mat(nb, style = "B", zero.policy = TRUE)
id_col <- kdn_shp$admin2Name
rownames(adj_matrix) <- id_col
colnames(adj_matrix) <- id_col
#write.csv(adj_matrix,paste0(outdir,"/adj_mat.csv"))
#### B: Analysis of Under-reporting ####
## Ward-level reporting rates over time
cbhmis_clean$repRate <- cbhmis_clean$repCVs/cbhmis_clean$totalCVs
#table(cbhmis_clean$repRate,exclude = NULL)
cbhmis_clean <- cbhmis_clean %>% group_by(LGA) %>%
mutate(Ward_color_group = as.factor((as.numeric(factor(Ward)) - 1) %% 10 + 1))
p1 <- ggplot(cbhmis_clean,aes(x=time,y=repRate,group=Ward,color=Ward_color_group)) + facet_wrap(~LGA) +
geom_point() + geom_line() + theme_bw() +   theme(legend.position = "none")
p1
## aggregating to LGA level
cbhmis_lga <- cbhmis_clean[,!names(cbhmis_clean) %in% c("Ward","repRate","Ward_color_group","sub_time")] %>%
group_by(time, LGA) %>% summarise(across(everything(), sum))
cbhmis_lga$repRate <- 100*cbhmis_lga$repCVs/cbhmis_lga$totalCVs
p.RR <- ggplot(cbhmis_lga, aes(x = time, y = repRate)) +
geom_line() +
geom_point() +
facet_wrap(~LGA) +
ylab("Reporting Rate") +
scale_x_date(date_labels = "%b %y") +
theme_bw() +
ylim(0, 100) +
theme(
strip.text = element_text(size = 14),      # Facet labels
axis.title = element_text(size = 14),      # Axis labels
axis.text = element_text(size = 12),       # Tick labels
plot.title = element_text(size = 16),      # Title (if you add one)
legend.text = element_text(size = 12),     # Legend text (if present)
legend.title = element_text(size = 14)     # Legend title (if present)
)
png(filename = paste0("data checks/plots/repRateMonthly.png"),height=800,width=1400)
p.RR
dev.off()
cbhmis_lga_rep <- cbhmis_lga[,names(cbhmis_lga) %in% c("LGA","repRate")] %>%
group_by(LGA) %>% summarise(across(everything(), mean)) %>%
rename("avgRegRate"="repRate")
repRate <- left_join(kdn_shp,cbhmis_lga_rep,by=c("NAME_2"="LGA"))
pRRmap <- ggplot(repRate) +
geom_sf(aes(fill = avgRegRate)) +
scale_fill_viridis_c() +
geom_sf_text(aes(label = NAME_2 ), size = 4, check_overlap = TRUE,color="white",fontface ="bold") +
theme_void() +
labs(fill = "Average reporting rate",
title = "Reporting Rate for LGA averaged over monthly rates")
png(filename = "data checks/plots/repRateMap.png",height=900,width=1200)
pRRmap
dev.off()
##### NEEDS FOLLOW-UP: Need to correct total number of CVs after getting confimration from Faruk
####  C: Checking CBHMIS Referrral and MMR data      ####
##### C1: Cleaning referral data for under-reporting #####
## cleaning will happen on the monthly level rather than aggregate level
referral_vars <- c("ANC_ref","FP_ref","LD_ref","PNC_ref","PPFP_ref","Imm_ref","Nut_ref","ICMI_ref")
### NEEDS FOLLOW_UP: Use consistent population data once decided
## We load in external population data to scale the referral data
pop_wra <- rast("C:/Users/anumi/OneDrive - Bill & Melinda Gates Foundation/Documents/GitHub/CBHMIS_SAE_MMR/raw data/NGA_population_v2_1_agesex_f15_49.tif")
plot(pop_wra)
boundary <- kdn_shp
boundary$wra_pop <- exact_extract(pop_wra, boundary, 'sum')
pop_dat <- boundary %>%
st_drop_geometry() %>%
as.data.frame() %>% dplyr::select(NAME_2, wra_pop)
## Checking referral data to see how it looks against reporting rate and for outliers
palette23 <- createPalette(23, seedcolors = c("#000000"))
names(palette23) <- unique(cbhmis_lga$LGA)  # Named vector for manual scale
scat.plots <- map(referral_vars, function(var) {
ggplot(cbhmis_lga, aes(x = repRate, y = .data[[var]])) +
geom_point(aes(color = LGA)) +
geom_smooth(
method = "loess",
se = FALSE,
color = "black",
linetype = "dashed") +
scale_color_manual(values = palette23) +
theme_minimal() +
labs(
title = paste(var),
x = "Reporting Rate",
y = "Num. Referrals"
)
})
ref_plot <- wrap_plots(scat.plots, ncol = 3, guides = "collect") &
theme(legend.position = "bottom")
png(filename = paste0("data checks/plots/referralplots.png"),height=900,width=1200)
ref_plot
dev.off()
## We will use ANC referral rates as our proxy of under-reporing. Code from here on
##  out will only focus on ANC
## lots of outliers again for Sabon Gari -- will look at exclusion based on (1) 3SD and
## (2)assuming 5% of women of WRA are pregnant and 70% are attending ANC (gives an upper bound)
outlier.sd <-  cbhmis_lga %>%
group_by(LGA)  %>%
summarise(threeSD = 3*sd(ANC_ref) + mean(ANC_ref, na.rm=T))
outlier.wra <- pop_dat
outlier.wra$preg_women <- outlier.wra$wra_pop*0.05
outlier.wra$anc_max <- outlier.wra$preg_women*0.7
outlier <- left_join(outlier.sd,outlier.wra,by=c("LGA"="NAME_2"))
pANC <- ggplot(cbhmis_lga) +
facet_wrap(~LGA,scales = 'free_y') +
geom_point(aes(x = repRate, y = ANC_ref)) +
geom_hline(data=outlier, aes(yintercept=threeSD, color = "3 SD Threshold")) +
geom_hline(data=outlier, aes(yintercept=anc_max, color = "Max ANC")) +
theme_bw() + xlim(c(0,100)) +
scale_color_manual(values = c("3 SD Threshold" = "blue", "Max ANC" = "green"),name="Outlier Rule")
png(filename = paste0("data checks/plots/ANC_ref_outlier.png"),height=900,width=1200)
pANC
dev.off()
### There is not a best rule, 3SD looks generally less conservative, but the maximum logical
##    ANC rule seems to overly exclude the Kauru and Jaba data. Will go with this one for now
##   UPDATE 7/2/25: Based on conversations with the team, we're going to not exclude but keep use the median value for the LGA to impute referral rates
## join with CBHMIS data
cbhmis_lga <- dplyr::left_join(cbhmis_lga,outlier,by=c("LGA"))
## surpress those LGA obs where the obs are above threshold
cbhmis_lga$ANC_ref <- ifelse(cbhmis_lga$ANC_ref > cbhmis_lga$anc_max,NA,cbhmis_lga$ANC_ref)
cbhmis_lga$ANC_ref
cbhmis_lga
cbhmis_lga %>%
group_by(LGA) %>%
mutate(
ANC_ref = ifelse(is.na(ANC_ref), median(ANC_ref, na.rm = TRUE), ANC_ref),
) %>%
ungroup()
cbhmis_lga <- cbhmis_lga %>%
group_by(LGA) %>%
mutate(
ANC_ref = ifelse(is.na(ANC_ref), median(ANC_ref, na.rm = TRUE), ANC_ref),
) %>%
ungroup()
table(cbhmis_lga$ANC_ref)
table(cbhmis_lga$ANC_ref,exclude = NULL)
pANC_remove <- ggplot(cbhmis_lga,aes(x = repRate, y = ANC_ref)) +
geom_point(aes(color = LGA)) +
scale_color_manual(values = palette23) +
geom_smooth(method = "loess", se = FALSE, color = "black",linetype = "dashed") +
theme_bw() + xlim(c(50,100))
pANC_remove
outlier.sd <-  cbhmis_lga %>%
group_by(LGA)  %>%
summarise(threeSD = 3*sd(ANC_ref) + mean(ANC_ref, na.rm=T))
outlier.wra <- pop_dat
outlier.wra$preg_women <- outlier.wra$wra_pop*0.05
outlier.wra$anc_max <- outlier.wra$preg_women*0.6
outlier <- left_join(outlier.sd,outlier.wra,by=c("LGA"="NAME_2"))
outlier
facet_wrap(~LGA,scales = 'free_y') +
geom_point(aes(x = repRate, y = ANC_ref)) +
geom_hline(data=outlier, aes(yintercept=threeSD, color = "3 SD Threshold")) +
geom_hline(data=outlier, aes(yintercept=anc_max, color = "Max ANC")) +
theme_bw() + xlim(c(0,100)) +
scale_color_manual(values = c("3 SD Threshold" = "blue", "Max ANC" = "green"),name="Outlier Rule")
pANC <- ggplot(cbhmis_lga) +
facet_wrap(~LGA,scales = 'free_y') +
geom_point(aes(x = repRate, y = ANC_ref)) +
geom_hline(data=outlier, aes(yintercept=threeSD, color = "3 SD Threshold")) +
geom_hline(data=outlier, aes(yintercept=anc_max, color = "Max ANC")) +
theme_bw() + xlim(c(0,100)) +
scale_color_manual(values = c("3 SD Threshold" = "blue", "Max ANC" = "green"),name="Outlier Rule")
pANC
outlier
#################################################################
##   LGA estimates of community MMR                            ##
##   0. Pre-processing data                                    ##
##   Purpose: To get all covariate, outcome, and spatial data  ##
##            cleaned and prepped for model                    ##
##   Author: Anu Mishra                                        ##
##   Created 6/9/25                                            ##
#################################################################
library(sf)
library(spdep)
library(mapview)
library(tidyverse)
library(ggplot2)
library(patchwork)
library(terra)
library(lubridate)
library(exactextractr)
library(Polychrome)
set.seed(105)
setwd("C:/Users/anumi/OneDrive - Bill & Melinda Gates Foundation/Documents/GitHub/CBHMIS_SAE_MMR")
cbhmis <- readxl::read_xlsx("raw data/Kaduna_Final Data for Analysis_corrected.xlsx",sheet="Merged Data")
names(cbhmis) <- gsub(pattern = " ",replacement = ".",x=names(cbhmis))
#light data cleaning
cbhmis <- cbhmis[cbhmis$LGA!="0",]
cbhmis$LGA <- ifelse(cbhmis$LGA=="Birnin_gwari","Birnin_Gwari",cbhmis$LGA)
cbhmis$LGA <- ifelse(cbhmis$LGA=="Jema'a","Jemaa",cbhmis$LGA)
cbhmis$LGA <- ifelse(cbhmis$LGA=="Kaduna_north","Kaduna_North",cbhmis$LGA)
cbhmis$LGA <- ifelse(cbhmis$LGA=="Kaduna_south","Kaduna_South",cbhmis$LGA)
cbhmis$LGA <- ifelse(cbhmis$LGA=="Sabon_gari","Sabon_Gari",cbhmis$LGA)
cbhmis$LGA <- ifelse(cbhmis$LGA=="Zangon_kataf","Zangon_Kataf",cbhmis$LGA)
#subsetting to inclusion period
cbhmis$time <- as.Date(paste0(cbhmis$Month.of.reporting, cbhmis$Year.of.reporting,"1"), format="%B%Y%d")
cbhmis <- cbhmis[cbhmis$time >= as.Date("2023-10-01") & cbhmis$time < as.Date("2025-04-01"),]
cbhmis$submission_time <- cbhmis$`_submission_time`
#subsetting to a smaller set of variable
cbhmis <- cbhmis %>% dplyr::select("LGA","Ward","time","Total.number.of.CVs.in.the.ward","Number.of.CVs.that.reported",
"No.of.ANC.referral.in.the.last.one.month","No.of.FP.referral.in.the.last.one.month",
"No.of.Labour.&.delivery.referrals.in.the.last.one.month","No.of.PNC.referral.in.the.last.one.month",
"No.of.PPFP.referral.in.the.last.one.month","No.of.immunization.referral","No.of.Nutrition.referral",
"No.of.Integrated.Management.of.Childhood.Illness.(IMCI).referral",
"Total.number.of.live.births","Number.of.live.births.-.Males","Number.of.live.births.-.Females",
"Number.of.maternal.deaths",
"submission_time")
cbhmis$id <- 1:nrow(cbhmis)
## checking number of missing obs for a variable
colSums(is.na(cbhmis))
#number of wards per LGA -- seems to be some duplicates
ward_counts <- aggregate(Ward ~ LGA, data = cbhmis, FUN = function(x) length(unique(x)))
ward_time_counts <- aggregate(id ~ LGA  + Ward + time, data = cbhmis, FUN = length)  ## number of duplicate ward/month
names(ward_time_counts)[4] <- "count"
ward_time_counts[ward_time_counts$count>1,]
write.csv(ward_time_counts[ward_time_counts$count>1,],paste0("data checks/duplicates.csv"))
#only keeping last submission
cbhmis_clean <-  cbhmis %>%
group_by(LGA, Ward, time)  %>%
slice_max(order_by = submission_time, n = 1, with_ties = FALSE) %>%
ungroup()
## checking number of missing obs for a variable
colSums(is.na(cbhmis_clean))
#check for duplicates again
ward_time_counts_clean <- aggregate(id ~ LGA  + Ward + time, data = cbhmis_clean, FUN = length)  ## number of duplicate ward/month
names(ward_time_counts_clean)[4] <- "count"
ward_counts_clean <- aggregate(id ~ LGA  + Ward , data = cbhmis_clean, FUN = length)  ## number of duplicate ward/month
names(ward_counts_clean)[3] <- "count"
hist(ward_counts_clean$count) ## shouldn't have more than 18 obs per ward given the months we've included
write.csv(ward_counts_clean,paste0("data checks/num_obs_per_ward.csv"),row.names = F)
# some manual cleaning -- total number of CVs and rep CVs clearly getting enetered in one cell here
cbhmis_clean$Total.number.of.CVs.in.the.ward <- ifelse(cbhmis_clean$Total.number.of.CVs.in.the.ward>1000,
as.numeric(substr(as.character(cbhmis_clean$Number.of.CVs.that.reported), 1, 2)),
cbhmis_clean$Total.number.of.CVs.in.the.ward)
# ASSUMPTION: If the number of CVs per ward is 3 digits, we're going to take the first two & one ward seems kind of off
cbhmis_clean$Total.number.of.CVs.in.the.ward <- ifelse(cbhmis_clean$Total.number.of.CVs.in.the.ward>100,
as.numeric(substr(as.character(cbhmis_clean$Number.of.CVs.that.reported), 1, 2)),
cbhmis_clean$Total.number.of.CVs.in.the.ward)
cbhmis_clean$Total.number.of.CVs.in.the.ward[cbhmis_clean$Ward=="Turawa" & cbhmis_clean$time=="2024-11-01"] <- 9
names(cbhmis_clean) <- c("LGA", "Ward","time","totalCVs","repCVs",
"ANC_ref","FP_ref","LD_ref","PNC_ref","PPFP_ref","Imm_ref","Nut_ref","ICMI_ref",
"lb","lb_male","lb_female",
"deaths","sub_time","id")
#### A: Spatial data for adjacency matrix in model ####
#Nigeria shape file from GADM
nga_shp <- st_read("raw data/gadm41_NGA_shp/gadm41_NGA_2.shp")
kdn_shp <- nga_shp[nga_shp$NAME_1=="Kaduna",]
kdn_shp$NAME_2 <- gsub(pattern = " ",replacement = "_", kdn_shp$NAME_2)
kdn_shp$NAME_2 <- gsub(pattern = "'",replacement = "", kdn_shp$NAME_2)
st_crs(kdn_shp) ## checking projection of shape file to match GPS coordinates
mapview(kdn_shp) ## view map of Kaduna
# create adjacency matrix  -- Don't actually need the matrix for stan but just the nb file
nb <- poly2nb(kdn_shp)
adj_matrix <- nb2mat(nb, style = "B", zero.policy = TRUE)
id_col <- kdn_shp$admin2Name
rownames(adj_matrix) <- id_col
colnames(adj_matrix) <- id_col
#write.csv(adj_matrix,paste0(outdir,"/adj_mat.csv"))
#### B: Analysis of Under-reporting ####
## Ward-level reporting rates over time
cbhmis_clean$repRate <- cbhmis_clean$repCVs/cbhmis_clean$totalCVs
#table(cbhmis_clean$repRate,exclude = NULL)
cbhmis_clean <- cbhmis_clean %>% group_by(LGA) %>%
mutate(Ward_color_group = as.factor((as.numeric(factor(Ward)) - 1) %% 10 + 1))
p1 <- ggplot(cbhmis_clean,aes(x=time,y=repRate,group=Ward,color=Ward_color_group)) + facet_wrap(~LGA) +
geom_point() + geom_line() + theme_bw() +   theme(legend.position = "none")
p1
## aggregating to LGA level
cbhmis_lga <- cbhmis_clean[,!names(cbhmis_clean) %in% c("Ward","repRate","Ward_color_group","sub_time")] %>%
group_by(time, LGA) %>% summarise(across(everything(), sum))
cbhmis_lga$repRate <- 100*cbhmis_lga$repCVs/cbhmis_lga$totalCVs
p.RR <- ggplot(cbhmis_lga, aes(x = time, y = repRate)) +
geom_line() +
geom_point() +
facet_wrap(~LGA) +
ylab("Reporting Rate") +
scale_x_date(date_labels = "%b %y") +
theme_bw() +
ylim(0, 100) +
theme(
strip.text = element_text(size = 14),      # Facet labels
axis.title = element_text(size = 14),      # Axis labels
axis.text = element_text(size = 12),       # Tick labels
plot.title = element_text(size = 16),      # Title (if you add one)
legend.text = element_text(size = 12),     # Legend text (if present)
legend.title = element_text(size = 14)     # Legend title (if present)
)
png(filename = paste0("data checks/plots/repRateMonthly.png"),height=800,width=1400)
p.RR
dev.off()
cbhmis_lga_rep <- cbhmis_lga[,names(cbhmis_lga) %in% c("LGA","repRate")] %>%
group_by(LGA) %>% summarise(across(everything(), mean)) %>%
rename("avgRegRate"="repRate")
repRate <- left_join(kdn_shp,cbhmis_lga_rep,by=c("NAME_2"="LGA"))
pRRmap <- ggplot(repRate) +
geom_sf(aes(fill = avgRegRate)) +
scale_fill_viridis_c() +
geom_sf_text(aes(label = NAME_2 ), size = 4, check_overlap = TRUE,color="white",fontface ="bold") +
theme_void() +
labs(fill = "Average reporting rate",
title = "Reporting Rate for LGA averaged over monthly rates")
png(filename = "data checks/plots/repRateMap.png",height=900,width=1200)
pRRmap
dev.off()
##### NEEDS FOLLOW-UP: Need to correct total number of CVs after getting confimration from Faruk
####  C: Checking CBHMIS Referrral and MMR data      ####
##### C1: Cleaning referral data for under-reporting #####
## cleaning will happen on the monthly level rather than aggregate level
referral_vars <- c("ANC_ref","FP_ref","LD_ref","PNC_ref","PPFP_ref","Imm_ref","Nut_ref","ICMI_ref")
### NEEDS FOLLOW_UP: Use consistent population data once decided
## We load in external population data to scale the referral data
pop_wra <- rast("C:/Users/anumi/OneDrive - Bill & Melinda Gates Foundation/Documents/GitHub/CBHMIS_SAE_MMR/raw data/NGA_population_v2_1_agesex_f15_49.tif")
plot(pop_wra)
boundary <- kdn_shp
boundary$wra_pop <- exact_extract(pop_wra, boundary, 'sum')
pop_dat <- boundary %>%
st_drop_geometry() %>%
as.data.frame() %>% dplyr::select(NAME_2, wra_pop)
## Checking referral data to see how it looks against reporting rate and for outliers
palette23 <- createPalette(23, seedcolors = c("#000000"))
names(palette23) <- unique(cbhmis_lga$LGA)  # Named vector for manual scale
scat.plots <- map(referral_vars, function(var) {
ggplot(cbhmis_lga, aes(x = repRate, y = .data[[var]])) +
geom_point(aes(color = LGA)) +
geom_smooth(
method = "loess",
se = FALSE,
color = "black",
linetype = "dashed") +
scale_color_manual(values = palette23) +
theme_minimal() +
labs(
title = paste(var),
x = "Reporting Rate",
y = "Num. Referrals"
)
})
ref_plot <- wrap_plots(scat.plots, ncol = 3, guides = "collect") &
theme(legend.position = "bottom")
png(filename = paste0("data checks/plots/referralplots.png"),height=900,width=1200)
ref_plot
dev.off()
## We will use ANC referral rates as our proxy of under-reporing. Code from here on
##  out will only focus on ANC
## lots of outliers again for Sabon Gari -- will look at exclusion based on (1) 3SD and
## (2)assuming 5% of women of WRA are pregnant and 70% are attending ANC (gives an upper bound)
outlier.sd <-  cbhmis_lga %>%
group_by(LGA)  %>%
summarise(threeSD = 3*sd(ANC_ref) + mean(ANC_ref, na.rm=T))
outlier.wra <- pop_dat
outlier.wra$preg_women <- outlier.wra$wra_pop*0.05
outlier.wra$anc_max <- outlier.wra$preg_women*0.7
outlier <- left_join(outlier.sd,outlier.wra,by=c("LGA"="NAME_2"))
pANC <- ggplot(cbhmis_lga) +
facet_wrap(~LGA,scales = 'free_y') +
geom_point(aes(x = repRate, y = ANC_ref)) +
geom_hline(data=outlier, aes(yintercept=threeSD, color = "3 SD Threshold")) +
geom_hline(data=outlier, aes(yintercept=anc_max, color = "Max ANC")) +
theme_bw() + xlim(c(0,100)) +
scale_color_manual(values = c("3 SD Threshold" = "blue", "Max ANC" = "green"),name="Outlier Rule")
pANC
pANC <- ggplot(cbhmis_lga) +
facet_wrap(~LGA,scales = 'free_y') +
geom_point(aes(x = repRate, y = ANC_ref)) +
geom_hline(data=outlier, aes(yintercept=threeSD, color = "3 SD Threshold")) +
geom_hline(data=outlier, aes(yintercept=anc_max, color = "Max ANC")) +
theme_bw() + xlim(c(0,100)) +
scale_color_manual(values = c("3 SD Threshold" = "blue", "Max ANC" = "green"),name="Outlier Rule")
png(filename = paste0("data checks/plots/ANC_ref_outlier.png"),height=900,width=1200)
pANC
dev.off()
cbhmis_lga <- dplyr::left_join(cbhmis_lga,outlier,by=c("LGA"))
## surpress those LGA obs where the obs are above threshold
cbhmis_lga$ANC_ref <- ifelse(cbhmis_lga$ANC_ref > cbhmis_lga$anc_max,NA,cbhmis_lga$ANC_ref)
cbhmis_lga <- cbhmis_lga %>%
group_by(LGA) %>%
mutate(
ANC_ref = ifelse(is.na(ANC_ref), median(ANC_ref, na.rm = TRUE), ANC_ref),
) %>%
ungroup()
pANC_remove <- ggplot(cbhmis_lga) +
facet_wrap(~LGA,scales = 'free_y') +
geom_point(aes(x = repRate, y = ANC_ref)) +
geom_hline(data=outlier, aes(yintercept=threeSD, color = "3 SD Threshold")) +
geom_hline(data=outlier, aes(yintercept=anc_max, color = "Max ANC")) +
theme_bw() + xlim(c(0,100)) +
scale_color_manual(values = c("3 SD Threshold" = "blue", "Max ANC" = "green"),name="Outlier Rule")
pANC_remove
pANC_remove_corr <- ggplot(cbhmis_lga,aes(x = repRate, y = ANC_ref)) +
geom_point(aes(color = LGA)) +
scale_color_manual(values = palette23) +
geom_smooth(method = "loess", se = FALSE, color = "black",linetype = "dashed") +
theme_bw() + xlim(c(50,100))
pANC_remove_corr <- ggplot(cbhmis_lga,aes(x = repRate, y = ANC_ref)) +
geom_point(aes(color = LGA)) +
scale_color_manual(values = palette23) +
geom_smooth(method = "loess", se = FALSE, color = "black",linetype = "dashed") +
theme_bw() + xlim(c(50,100))
pANC_remove_corr
png(filename = paste0(outdir,"data checks/plots/ANC_ref_remove.png"),height=900,width=1200)
sd_lines <- cbhmis_lga %>%
group_by(LGA) %>%
summarise(deaths_3sd = 3*sd(deaths, na.rm = TRUE),
lb_3sd = 3*sd(lb, na.rm = TRUE) + mean(lb, na.rm=T),
lb_4sd = 4*sd(lb, na.rm = TRUE) + mean(lb, na.rm=T),)
pMD <- ggplot(data=cbhmis_lga) + facet_wrap(~LGA) + ylab("Maternal Deaths") +
geom_line(aes(x=time,y=deaths)) + geom_point(aes(x=time,y=deaths)) + theme_bw() +
geom_hline(data = sd_lines, aes(yintercept = deaths_3sd,color="3 SD"),
linetype = "dashed") #+ scale_color_manual(values = c("3 SD" = "red"),name="Outlier Rule")
pLB <- ggplot(data=cbhmis_lga,aes(x=time,y=lb)) + facet_wrap(~LGA) + ylab("Live Births") +
geom_line() + geom_point() + theme_bw() +
geom_hline(data = sd_lines, aes(yintercept = lb_3sd,color="3 SD"),
linetype = "dashed") +
geom_hline(data = sd_lines, aes(yintercept = lb_4sd,color="4 SD"),
linetype = "dashed") +
scale_color_manual(values = c("3 SD" = "red","4 SD" = "blue"),name="Outlier Rule")
MMR_line <- pMD + pLB + plot_layout(ncol = 2)
MMR_line <- pMD + pLB + plot_layout(ncol = 2)
MMR_line
View(cbhmis_lga)
pMD
png(filename = paste0(outdir,"/data checks/plots/MMR_line.png"),height=900,width=1200)
cbhmis_agg <- cbhmis_lga %>%
select(LGA,repRate,ANC_ref,lb,deaths,wra_pop) %>%
group_by(LGA) %>%
summarise(repRate = mean(repRate,na.rm=TRUE),
ANC_ref = mean(ANC_ref, na.rm=TRUE),
lb = sum(lb,na.rm = T),
deaths=sum(deaths, na.rm = T),
wra = max(wra_pop))
cbhmis_agg$ANC_ref_scaled <- 1000*cbhmis_agg$ANC_ref/cbhmis_agg$wra
cbhmis_agg$MMR <- 100000*cbhmis_agg$deaths/cbhmis_agg$lb
kdn_shp <- left_join(kdn_shp,cbhmis_agg,by=c("NAME_2"="LGA"))
gc()
gc()
