library(sf)
library(dplyr)
library(osrm)
library(purrr)
library(tidyr)
load("C:/Users/anumi/OneDrive - Bill & Melinda Gates Foundation/NCO support analyses/NCO - State Selection/Code/William/data.and.shapesf.Rda")
admin3_centroids <- kaduna_adm3.sf %>%
mutate(centroid = st_centroid(geometry)) %>%
st_as_sf() %>%
st_set_geometry("centroid") # temporarily set centroids as geometry
admin2_split <- split(admin3_centroids, admin3_centroids$lganame)
calc_avg_travel_time <- function(df) {
if (nrow(df) < 2) return(NA)
# Use osrmTable to compute pairwise travel times
travel_matrix <- osrmTable(loc = df, measure = "duration")
# Extract durations matrix
durations <- travel_matrix$durations
# Calculate average travel time (excluding diagonal)
durations[lower.tri(durations, diag = TRUE)] <- NA
mean(durations, na.rm = TRUE)
}
avg_travel_times <- map_dbl(admin2_split, calc_avg_travel_time)
### CHAI CBHMIS collaboration ##
##  Exploratory analysis to understand coverage bias
library(tidyverse)
library(ggplot2)
library(sf)
library(Polychrome)
library(patchwork)
library(terra)
library(exactextractr)
library(scales)  # for date formatting
outdir <- "C:/Users/anumi/OneDrive - Bill & Melinda Gates Foundation/HDS - Health and Data Systems/CBHMIS CHAI Nigeria/WIP results/predictor plots"
cbhmis <- readxl::read_xlsx("C:/Users/anumi/OneDrive - Bill & Melinda Gates Foundation/HDS - Health and Data Systems/CBHMIS CHAI Nigeria/Source data/Kaduna TL dataset _ Jul2024.xlsx",sheet=2)
names(cbhmis) <- gsub(" ",".",names(cbhmis))
cbhmis$Month <- as.Date(cbhmis$Month,format="%Y-%m-%d")
nga_shp <- st_read("C:/Users/anumi/OneDrive - Bill & Melinda Gates Foundation/Data/shape_files/NGA/nga_admbnda_adm2_osgof/nga_admbnda_adm2_osgof_20170222.shp")
kdn_shp <- nga_shp[nga_shp$admin1Name=="Kaduna",]
kdn_shp$admin2Name <- gsub(replacement = "_",pattern = "-",kdn_shp$admin2Name)
kdn_shp$admin2Name <- gsub(replacement = "",pattern = "'",kdn_shp$admin2Name)
kdn_shp$admin2Name <- gsub(replacement = "_",pattern = " ",kdn_shp$admin2Name)
kdn_shp$admin2Name <- ifelse(kdn_shp$admin2Name=="Zango_Kataf","Zangon_Kataf",
ifelse(kdn_shp$admin2Name=="Markafi","Makarfi",kdn_shp$admin2Name))
kdn_shp
length(kdn_shp$admin2Name)
### A: Spatial data for adjacency matrix in model ##
#Nigeria shape file from GADM
nga_shp <- st_read("C:/Users/anumi/OneDrive - Bill & Melinda Gates Foundation/Data/shape_files/NGA/nga_admbnda_adm2_osgof/nga_admbnda_adm2_osgof_20170222.shp")
#################################################################
##   LGA estimates of community MMR                            ##
##   0. Pre-processing data                                    ##
##   Purpose: To get all covariate, outcome, and spatial data  ##
##            cleaned and prepped for model                    ##
##   Author: Anu Mishra                                        ##
##   Created 6/9/25                                            ##
#################################################################
library(sf)
### A: Spatial data for adjacency matrix in model ##
#Nigeria shape file from GADM
nga_shp <- st_read("C:/Users/anumi/OneDrive - Bill & Melinda Gates Foundation/Data/shape_files/NGA/nga_admbnda_adm2_osgof/nga_admbnda_adm2_osgof_20170222.shp")
kdn_shp <- nga_shp[nga_shp$admin1Name=="Kaduna",]
st_crs(kdn_shp) ## checking projection of shape file to match GPS coordinates
mapview(kdn_shp)
library(spdep)
install.packages("spdep")
library(SUMMER)
install.packages("SUMMER")
library(SUMMER)
amat()
getAmat()
getAmat
install.packages("mapview")
library(spdep)
library(mapview)
mapview(kdn_shp)
# create adjaceny matrix
nb <- poly2nb(kdn_shp)
plot(kdn_shp, coordinates(st_centroid(st_geometry(kdn_shp))), add = TRUE, col = 'red')
kdn_shp
st_geometry(kdn_shp)
st_centroid(st_geometry(kdn_shp))
coordinates(st_centroid(st_geometry(kdn_shp)))
adj_matrix <- nb2mat(nb, style = "B", zero.policy = TRUE)
View(adj_matrix)
kdn_shp$admin2Name
id_col <- kdn_shp$admin2Name
rownames(adj_matrix) <- id_col
colnames(adj_matrix) <- id_col
getwd()
outdir <- "C:/Users/anumi/OneDrive - Bill & Melinda Gates Foundation/Documents/GitHub/CBHMIS_SAE_MMR/"
write.csv(paste0(outdir,"/adj_mat.csv"))
write.csv(adj_matrix,paste0(outdir,"/adj_mat.csv"))
install.packages(c("cmdstanr", "posterior", "loo", "bayesplot"),
repos = c('https://stan-dev.r-universe.dev', getOption("repos")))
library(cmdstanr)
install_cmdstan()
